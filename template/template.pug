include ./mixins

doctype xml
doctype plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"
plist(version='1.0')
	dict
		+Key('name', 'Stalwart')

		+Key('settings')
			array
				dict
					+Key('settings')
						dict
							+Key('background', schema.bg)
							+Key('foreground', C('black'))

							+Key('caret', schema.accent)

							- //+Key('gutter', C('white'))
							- //+Key('gutterForeground', schema.accent)

							- //+Key('invisibles', C('red'))

							+Key('lineHighlight', schema.highlight)

							+Key('selection', schema.selection)
							+Key('selectionBorder', schema.selection.darken(.5))

							+Key('guide', base16.red.bright)
							- //+Key('activeGuide', base16.red.bright)
							- //+Key('stackGuide', base16.red.bright)


				- // Language Basics
				+Style('keyword')
					+Bold
					+Fg(C('black'))

				+Style('storage.type')
					+Bold
					//- +Fg(C('black'))

				+Style('storage.modifier')
					+Bold

				+Style('support.function')
					+FgAccent

				+Style('variable.function')
					+FgAccent

				+Style('meta.brace')
					+Bold

				+Style('support.type')
					+FgSecondary

				+Style('support.class')
					+FgSecondary

				+Style('constant.language.boolean')
					+Bold
					+FgAccent

				+Style('constant.language.null')
					+Bold
					+FgAccent

				+Style('punctuation.section')
					+Bold

				+Style('punctuation.definition')
					+Bold

				- // Comment
				+Style('comment')
					+Key('background', schema.comment.bg)

				+Style('comment.line.shebang')
					+Key('background', schema.string.bg)


				- // String
				+Style('string.quoted')
					+Fg(schema.string.fg)
					+Key('background', schema.string.bg)

				+Style('punctuation.definition.string')
					+Bold
					+Key('background', schema.string.bg__around)

				+Style('string.interpolated')
					+Fg(schema.string.fg)
					+Key('background', schema.string.bg)

				+Style('string.interpolated keyword.other.template')
					+Bold
					+Key('background', schema.string.bg__around)


				- // JavaScript
				+Style('constant.other.object.key.js')
					+FgAccent

				+Style('punctuation.separator.key-value.js')
					+Bold
					+Fg(C('black'))

				+Style('variable.language.this.js')
					+Bold

				+Style('punctuation.definition.parameters.begin.js')
					+Bold
				+Style('punctuation.definition.parameters.end.js')
					+Bold

				+Style('meta.function-call.method.without-arguments.js meta.group.braces.round.function.arguments.js')
					+Bold
				+Style('meta.function-call.static.without-arguments.js meta.group.braces.round.function.arguments.js')
					+Bold
				+Style('meta.function-call.without-arguments.js meta.group.braces.round.function.arguments.js')
					+Bold

				+Style('storage.type.function.arrow.js')
					+FgAccent

				+Style('string.regexp.js')
					+Key('background', base16.magenta.normal.alpha(.2))
				+Style('string.regexp punctuation.definition.string')
					+Bold
					+Key('background', base16.magenta.normal.alpha(.3))

				- // Flow
				+Style('support.type.type.flowtype.js')
					+Fg(schema.string.fg)
					+Bold

				+Style('meta.generic.flow')
					+Key('background', secondary.alpha(.1))

				+Style('variable.parameter.generic.flow')
					+FgSecondary

				+Style('variable.other.type.flow')
					+FgSecondary

				//- but:
				+Style('meta.declaration.type.flow variable.other.type.flow')
					+Fg('black')

				+Style('comment.block.flow')
					+Key('background', secondary.alpha(.1))

				- // JSON
				//- +Style('punctuation.definition.dictionary')
					+Bold

				//- +Style('punctuation.definition.array')
					+Bold

				+Style('constant.language.json')
					+Bold

				- // CSS
				+Style('entity.name.tag.css')
					+Bold

				+Style('entity.other.attribute-name.class.css')
					+Bold
					+FgAccent

				+Style('entity.other.attribute-name.id.css')
					+Bold
					+FgSecondary

				+Style('entity.other.attribute-name.pseudo-class.css')
					+Bold
					+FgSecondary

				+Style('variable.other.pseudo-class.css')
					+Bold
					+FgSecondary

				+Style('support.type.property-name.css')
					+Bold
					+Fg(C('black'))

				+Style('punctuation.separator.key-value.cs')
					+Bold

				+Style('punctuation.terminator.rule.css')
					+Bold

				+Style('punctuation.terminator.css')
					+Bold

				+Style('source.css punctuation.separator.combinator')
					+Bold

				- //+Style('punctuation.section.property-list.css')
				- //	+Bold

				+Style('source.css constant.numeric')
					+FgAccent

				+Style('source.css constant.other')
					+FgAccent

				+Style('variable.declaration.less')
					+FgAccent

				+Style('variable.other.less')
					+FgAccent


				- // SGML
				+Style('entity.name.tag')
					+Bold

				//- +Style('punctuation.definition.tag')
					+Bold

				+Style('meta.tag.sgml')
					+Bold

				+Style('entity.other.attribute-name')
					+FgAccent


				- // Jade
				+Style('entity.name.tag.jade')
					+Bold

				+Style('entity.name.function.jade')
					+Bold

				+Style('text.jade meta.tag.sgml.doctype')
					+Bold

				+Style('text.jade constant.language.js')
					+Bold
					+FgAccent

				+Style('string.interpolated.jade')
					+FgAccent

				+Style('string.quoted.jade string.interpolated.jade')
					+Bold

				+Style('text.jade constant.id.tag.jade')
					+Bold
					+Fg(base16.blue.normal)

				+Style('text.jade string.comment')
					+Key('background', schema.comment.bg)


				- // Markdown
				+Style('markup.heading')
					+Bold

				+Style('markup.bold')
					+Bold

				+Style('markup.italic')
					+Fg(C('dimgray'))

				+Style('meta.link.inline')
					+Key('background', schema.comment.bg)
				+Style('text.html.markdown punctuation.definition.string')
					+Key('background', schema.comment.bg) //- poor
				+Style('meta.link.inline markup.underline.link')
					+Fg(base16.blue.normal)

				+Style('markup.quote')
					+Key('background', schema.comment.bg)


				- // Shell
				//- +Style('source.shell punctuation.definition.group.shell')
					+Bold

				+Style('source.shell meta.function')
					+Bold


				- // BracketHighlighter
				+Style('bracket-highlighter')
					+FgAccent
					- // +Fg(C('white'))
					- // +Fg(C(hexa(schema.accent)).alpha(0.5))

					+Key('background', schema.accent)
					- // +Key('background', C('white'))
